let (readline, fs, path) = (require('readline'), require("fs"), require("path"));
let rl = readline.createInterface(process.stdin, process.stdout);
let generator = require("./compiler");
let string code = "";
let std = fs.readFileSync("\(path.dirname(__dirname))/lib/prelude.stps",
  "utf8");

console.log("stripes> STRIPES v(\require('../package.json').version) INTERACTIVE CONSOLE");
console.log("stripes> TYPE RUN;; TO EXECUTE CODE. TYPE CLOSE;; TO EXIT\n");
rl.setPrompt('stripes> ');
rl.prompt();

rl.on('line', fn(line)
  if (line.trim() is "close;;") rl.close(); end;
  if (line.trim() is "clear;;") code = ""; end;

  if (line.trim() is "run;;")
    repl();
    code = "";
  end; elsif (line.endsWith("run;;"))
    code += line.substring(0, line.length - 5);
    repl();
    code = "";
  end; elsif (line.endsWith("code;;") or line.trim() is "code;;")
    console.log("stps> " + code);
    console.log("js> " + generator.GenerateStripes(code));
  end; else
    code = code + line;
  end;

  rl.prompt();
end).on('close', fn
  process.exit(0);
end);

let repl = fn
  let js = generator.GenerateStripes(std + code);
  console.log("> \(eval(js))");
end;

fn String >>> endsWith(suffix)
  return(this.indexOf(suffix, this.length - suffix.length) isnt -1);
end;
